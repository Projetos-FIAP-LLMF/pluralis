name: Continuous Delivery (Docker Hub → Azure Web App)

on:
  push:
    branches: [ develop, master ]

env:
  IMAGE_NAME: pluralis-app
  REGISTRY: index.docker.io

jobs:
  build_and_push:
    name: Build (Gradle Java 17) + Docker Push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Permissão gradlew
        run: chmod +x gradlew

      - name: Testes
        run: ./gradlew clean test --no-daemon

      - name: Build jar (sem testes)
        run: ./gradlew bootJar -x test --no-daemon

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login (Docker Hub)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          if [ "${GITHUB_REF_NAME}" = "master" ]; then
            echo "TAG=prod" >> $GITHUB_OUTPUT
          else
            echo "TAG=staging" >> $GITHUB_OUTPUT
          fi
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "IMAGE=${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

      - name: Build & Push (tag por ambiente + SHA)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.TAG }}
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.SHA_TAG }}

  deploy_staging:
    name: Deploy to Azure (staging - develop)
    needs: build_and_push
    runs-on: ubuntu-latest
    if: github.ref_name == 'develop'
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.webapp-url }}
    steps:
      - name: Set image name
        id: img
        run: echo "FULL=${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:staging" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Web App (staging)
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_STG }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_STG }}
          images: ${{ steps.img.outputs.FULL }}

  deploy_prod:
    name: Deploy to Azure (production - master)
    needs: build_and_push
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.webapp-url }}
    steps:
      - name: Set image name
        id: img
        run: echo "FULL=${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:prod" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Web App (prod)
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_PROD }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_PROD }}
          images: ${{ steps.img.outputs.FULL }}
