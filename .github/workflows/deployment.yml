name: CI/CD via ACR (compose auto-deploy)

on:
  push:
    branches: [ master, develop ]

env:
  IMAGE_NAME: pluralis-app
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            .gradle/caches
            .gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Permissão gradlew
        run: chmod +x gradlew

      - name: Build & Test
        run: ./gradlew clean test --no-daemon

  build_push:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            .gradle/caches
            .gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Permissão gradlew
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew clean bootJar -x test --no-daemon

      - name: Define ambiente (staging/prod)
        id: env
        run: |
          if [ "${GITHUB_REF_NAME}" = "master" ]; then
            echo "TAG=prod" >> $GITHUB_OUTPUT
          else
            echo "TAG=staging" >> $GITHUB_OUTPUT
          fi

      - name: Login no ACR
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build e Push da imagem
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.env.outputs.TAG }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.env.outputs.TAG }}
